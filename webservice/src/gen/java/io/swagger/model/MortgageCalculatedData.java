/*
 * OpenAPI Specification for Bank Application
 * Specification Document for Cart Validation and Mortgage Calculation Application
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Contains validation data and calculated mortgage data
 */
@Schema(description = "Contains validation data and calculated mortgage data")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2021-05-11T12:53:02.872Z[GMT]")
public class MortgageCalculatedData {

    @JsonProperty("validation-result")
    private Boolean validationResult = null;

    @JsonProperty("validation-messages")
    private List<String> validationMessages = new ArrayList<String>();

    @JsonProperty("monthly-payment")
    private Double monthlyPayment = null;

    @JsonProperty("loan-amortization-data")
    private List<LoanAmortizationData> loanAmortizationData = null;

    public MortgageCalculatedData validationResult(Boolean validationResult) {
        this.validationResult = validationResult;
        return this;
    }

    /**
     * Result of input data validation
     *
     * @return validationResult
     **/
    @JsonProperty("validation-result")
    @Schema(required = true, description = "Result of input data validation")
    @NotNull
    public Boolean isValidationResult() {
        return validationResult;
    }

    public void setValidationResult(Boolean validationResult) {
        this.validationResult = validationResult;
    }

    public MortgageCalculatedData validationMessages(List<String> validationMessages) {
        this.validationMessages = validationMessages;
        return this;
    }

    public MortgageCalculatedData addValidationMessagesItem(String validationMessagesItem) {
        this.validationMessages.add(validationMessagesItem);
        return this;
    }

    /**
     * Array of validation messages
     *
     * @return validationMessages
     **/
    @JsonProperty("validation-messages")
    @Schema(required = true, description = "Array of validation messages")
    @NotNull
    public List<String> getValidationMessages() {
        return validationMessages;
    }

    public void setValidationMessages(List<String> validationMessages) {
        this.validationMessages = validationMessages;
    }

    public MortgageCalculatedData monthlyPayment(Double monthlyPayment) {
        this.monthlyPayment = monthlyPayment;
        return this;
    }

    /**
     * Monthly payment value
     *
     * @return monthlyPayment
     **/
    @JsonProperty("monthly-payment")
    @Schema(description = "Monthly payment value")
    public Double getMonthlyPayment() {
        return monthlyPayment;
    }

    public void setMonthlyPayment(Double monthlyPayment) {
        this.monthlyPayment = monthlyPayment;
    }

    public MortgageCalculatedData loanAmortizationData(List<LoanAmortizationData> loanAmortizationData) {
        this.loanAmortizationData = loanAmortizationData;
        return this;
    }

    public MortgageCalculatedData addLoanAmortizationDataItem(LoanAmortizationData loanAmortizationDataItem) {
        if (this.loanAmortizationData == null) {
            this.loanAmortizationData = new ArrayList<LoanAmortizationData>();
        }
        this.loanAmortizationData.add(loanAmortizationDataItem);
        return this;
    }

    /**
     * Array of objects, each object contains loan amortization data for a specific month
     *
     * @return loanAmortizationData
     **/
    @JsonProperty("loan-amortization-data")
    @Schema(description = "Array of objects, each object contains loan amortization data for a specific month")
    @Valid
    public List<LoanAmortizationData> getLoanAmortizationData() {
        return loanAmortizationData;
    }

    public void setLoanAmortizationData(List<LoanAmortizationData> loanAmortizationData) {
        this.loanAmortizationData = loanAmortizationData;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MortgageCalculatedData mortgageCalculatedData = (MortgageCalculatedData) o;
        return Objects.equals(this.validationResult, mortgageCalculatedData.validationResult) &&
                Objects.equals(this.validationMessages, mortgageCalculatedData.validationMessages) &&
                Objects.equals(this.monthlyPayment, mortgageCalculatedData.monthlyPayment) &&
                Objects.equals(this.loanAmortizationData, mortgageCalculatedData.loanAmortizationData);
    }

    @Override
    public int hashCode() {
        return Objects.hash(validationResult, validationMessages, monthlyPayment, loanAmortizationData);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MortgageCalculatedData {\n");

        sb.append("    validationResult: ").append(toIndentedString(validationResult)).append("\n");
        sb.append("    validationMessages: ").append(toIndentedString(validationMessages)).append("\n");
        sb.append("    monthlyPayment: ").append(toIndentedString(monthlyPayment)).append("\n");
        sb.append("    loanAmortizationData: ").append(toIndentedString(loanAmortizationData)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
